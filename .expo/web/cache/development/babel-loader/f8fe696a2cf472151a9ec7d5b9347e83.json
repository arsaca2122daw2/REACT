{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ansas\\\\Clot\\\\2DAW2\\\\M14\\\\PROYECTOREACT\\\\REACT\\\\app\\\\views\\\\M09_Sqlite.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SQLite from 'expo-sqlite';\nvar estils = StyleSheet.create({\n  textPeu: {\n    color: 'blue',\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  peu: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: '#FA0'\n  }\n});\nexport var M09_Sqlite = function (_React$Component) {\n  _inherits(M09_Sqlite, _React$Component);\n\n  var _super = _createSuper(M09_Sqlite);\n\n  function M09_Sqlite(props) {\n    var _this;\n\n    _classCallCheck(this, M09_Sqlite);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      path: null\n    };\n    db = SQLite.openDatabase(\"db.db\");\n    db.transaction(function (tx) {\n      tx.executeSql(\"create table if not exists items (id integer primary key not null, done int, value text);\");\n    });\n    console.log('creada taula');\n    db.transaction(function (tx) {\n      tx.executeSql(\"insert into items (done, value) values (0, ?)\", ['primer']);\n      tx.executeSql(\"insert into items (done, value) values (1, ?)\", ['segon']);\n      tx.executeSql(\"insert into items (done, value) values (2, ?)\", ['tercer']);\n      tx.executeSql(\"select * from items\", [], function (_, _ref) {\n        var rows = _ref.rows;\n        return console.log(JSON.stringify(rows));\n      });\n    });\n    return _this;\n  }\n\n  _createClass(M09_Sqlite, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: estils.peu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: estils.textPeu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, \" SQLITE \"));\n    }\n  }]);\n\n  return M09_Sqlite;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/ansas/Clot/2DAW2/M14/PROYECTOREACT/REACT/app/views/M09_Sqlite.js"],"names":["React","SQLite","estils","StyleSheet","create","textPeu","color","fontWeight","fontSize","peu","paddingTop","paddingBottom","backgroundColor","M09_Sqlite","props","state","path","db","openDatabase","transaction","tx","executeSql","console","log","_","rows","JSON","stringify","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AASA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,UAAU,EAAE,MAFL;AAGPC,IAAAA,QAAQ,EAAE;AAHH,GADsB;AAM/BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE,EADT;AAEHC,IAAAA,aAAa,EAAE,EAFZ;AAGHC,IAAAA,eAAe,EAAE;AAHd;AAN0B,CAAlB,CAAf;AAYA,WAAaC,UAAb;AAAA;;AAAA;;AACE,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGAC,IAAAA,EAAE,GAAGhB,MAAM,CAACiB,YAAP,CAAoB,OAApB,CAAL;AAEAD,IAAAA,EAAE,CAACE,WAAH,CAAe,UAAAC,EAAE,EAAI;AACnBA,MAAAA,EAAE,CAACC,UAAH,CACE,2FADF;AAGD,KAJD;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAN,IAAAA,EAAE,CAACE,WAAH,CACE,UAAAC,EAAE,EAAI;AACJA,MAAAA,EAAE,CAACC,UAAH,CAAc,+CAAd,EAA+D,CAAC,QAAD,CAA/D;AACAD,MAAAA,EAAE,CAACC,UAAH,CAAc,+CAAd,EAA+D,CAAC,OAAD,CAA/D;AACAD,MAAAA,EAAE,CAACC,UAAH,CAAc,+CAAd,EAA+D,CAAC,QAAD,CAA/D;AACAD,MAAAA,EAAE,CAACC,UAAH,CAAc,qBAAd,EAAqC,EAArC,EAAyC,UAACG,CAAD;AAAA,YAAMC,IAAN,QAAMA,IAAN;AAAA,eACvCH,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAZ,CADuC;AAAA,OAAzC;AAGD,KARH;AAbiB;AAuBlB;;AAxBH;AAAA;AAAA,6BA0BW;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACO,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACG,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAMD;AAjCH;;AAAA;AAAA,EAAgCL,KAAK,CAAC4B,SAAtC","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport * as SQLite from 'expo-sqlite';\r\n\r\n/**\r\n * Classe que hereta de Component i que treballa amb el\r\n * component de SQLite. Les dades es mostren per consola per a facilitar l'exercici\r\n * @version 1.0 23.03.2020\r\n * @author sergi.grau@fje.edu\r\n */\r\n\r\nconst estils = StyleSheet.create({\r\n  textPeu: {\r\n    color: 'blue',\r\n    fontWeight: 'bold',\r\n    fontSize: 30,\r\n  },\r\n  peu: {\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: '#FA0'\r\n  },\r\n});\r\nexport class M09_Sqlite extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      path: null,\r\n    };\r\n    db = SQLite.openDatabase(\"db.db\");\r\n\r\n    db.transaction(tx => {\r\n      tx.executeSql(\r\n        \"create table if not exists items (id integer primary key not null, done int, value text);\"\r\n      );\r\n    });\r\n    console.log('creada taula');\r\n    db.transaction(\r\n      tx => {\r\n        tx.executeSql(\"insert into items (done, value) values (0, ?)\", ['primer']);\r\n        tx.executeSql(\"insert into items (done, value) values (1, ?)\", ['segon']);\r\n        tx.executeSql(\"insert into items (done, value) values (2, ?)\", ['tercer']);\r\n        tx.executeSql(\"select * from items\", [], (_, { rows }) =>\r\n          console.log(JSON.stringify(rows))\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={estils.peu}>\r\n        <Text style={estils.textPeu}> SQLITE </Text>\r\n      </View>\r\n    );\r\n\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}